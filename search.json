[{"path":"https://meghansaha.github.io/artpack/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 artpack authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://meghansaha.github.io/artpack/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Meghan Harris. Author, maintainer, copyright holder.","code":""},{"path":"https://meghansaha.github.io/artpack/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harris M (2023). artpack: Provides comprehensive tool set creating Rtistry. R package version 0.0.0.9000, https://meghansaha.github.io/artpack/.","code":"@Manual{,   title = {artpack: Provides a comprehensive tool set for creating Rtistry},   author = {Meghan Harris},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://meghansaha.github.io/artpack/}, }"},{"path":"https://meghansaha.github.io/artpack/index.html","id":"artpack-","dir":"","previous_headings":"","what":"Provides a comprehensive tool set for creating Rtistry","title":"Provides a comprehensive tool set for creating Rtistry","text":"goal aRtpack help generative artists levels create generative art R. aRtpack package intended use tidyverse suite. specifically, ggplot2 package.","code":""},{"path":"https://meghansaha.github.io/artpack/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Provides a comprehensive tool set for creating Rtistry","text":"can install development version artpack GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Meghansaha/artpack\")"},{"path":"https://meghansaha.github.io/artpack/reference/art_pals.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom-built aRtpack Color Palettes — art_pals","title":"Custom-built aRtpack Color Palettes — art_pals","text":"aRtpack palette picker. art_pals function consists 17 palettes: \"arctic\", \"beach\", \"bw\", \"brood\", \"cosmos\", \"explorer\", \"gemstones\", \"grays\", \"icecream\", \"imagination\", \"majestic\", \"nature\", \"neon\", \"ocean\", \"plants\", \"rainbow\", \"sunnyside\"","code":""},{"path":"https://meghansaha.github.io/artpack/reference/art_pals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom-built aRtpack Color Palettes — art_pals","text":"","code":"art_pals(pal = NULL, n = 5, direction = \"regular\")"},{"path":"https://meghansaha.github.io/artpack/reference/art_pals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom-built aRtpack Color Palettes — art_pals","text":"pal character string desired aRtpack palette. 17 aRtpack palettes include: \"arctic\" - Icy blue white colors \"beach\" - Sand-colored tans ocean-colored blue colors \"bw\" - gradient black white colors \"brood\" - gradient different shades dark gray black colors \"cosmos\" - Nebula-inspired blue, purple, pink colors \"explorer\" - Pokemon-type inspired colors \"gemstones\" - Birthstone/Mineral-inspired colors \"grays\" - gradient dark, medium, light gray colors \"icecream\" - light pastel palette cream, blue, brown, pink colors \"imagination\" - 90's school supply-inspired colors \"majestic\" - Shades majestic purple colors \"nature\" - mix tan, brown, green, red colors \"neon\" - neon spectrum rainbow colors \"ocean\" - gradient dark light blue colors \"plants\" - gradient dark light green colors \"rainbow\" - vibrant mix rainbow colors \"sunnyside\" - retro-inspired mix pink, orange, yellow colors n numbers colors desired output. Default 5. n must positive integer value greater 0 direction direction palette Default \"regular\". two options accepted: \"regular\" \"reverse\"","code":""},{"path":"https://meghansaha.github.io/artpack/reference/art_pals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom-built aRtpack Color Palettes — art_pals","text":"character vector.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/art_pals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom-built aRtpack Color Palettes — art_pals","text":"","code":"library(ggplot2) dots <- data.frame(x = c(1:10), y = 2.5) dots$fills <- art_pals(\"rainbow\", 10)  dots |> ggplot(aes(x,y))+ theme_void()+ geom_point(shape = 21,          fill = dots$fills,          color = \"#000000\",          size = 10,          stroke = 2)    dots_rev <- data.frame(x = c(1:10), y = 2.5) dots_rev$fills <- art_pals(\"rainbow\", 10, \"reverse\")  dots_rev |> ggplot(aes(x,y))+ theme_void()+ geom_point(shape = 21,          fill = dots_rev$fills,          color = \"#000000\",          size = 10,          stroke = 2)"},{"path":"https://meghansaha.github.io/artpack/reference/circle_packer.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Generation for Circle Packing — circle_packer","title":"Data Generation for Circle Packing — circle_packer","text":"tool creating data frame values create circle packing design plotted. default circle_type \"whole\" used, output mapped geom_polygon ggplot. \"swirl\" used, output mapped geom_path best results.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/circle_packer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Generation for Circle Packing — circle_packer","text":"","code":"circle_packer(   n,   min_x = 0,   max_x = 10,   min_y = 0,   max_y = 10,   big_r = 5,   med_r = 2,   small_r = 1,   color_pal = NULL,   color_type = \"regular\",   circle_type = \"whole\" )"},{"path":"https://meghansaha.github.io/artpack/reference/circle_packer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Generation for Circle Packing — circle_packer","text":"n total number circles like function attempt create. single numeric value. min_x minimum limit x-axis - left 'border' canvas single numeric value. max_x maximum limit x-axis - right 'border' canvas single numeric value. min_y minimum limit y-axis - bottom 'border' canvas single numeric value. max_y maximum limit y-axis - top 'border' canvas single numeric value. big_r radius used 'big' sized circles single numeric value. med_r radius used 'medium' sized circles. single numeric value. small_r radius used 'small' sized circles. single numeric value. color_pal vector hex color codes mapped data. color_type Default \"regular\" - colors mapped order big circles small circles. \"reverse\" - colors mapped reversed order small big circles. \"random\" - colors mapped randomly sized circle. circle_type Default \"whole\" - Regular circles. \"swirl\" - circles replaced spirals. Spirals mapped geom_path ggplot best results.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/circle_packer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Generation for Circle Packing — circle_packer","text":"Tibble","code":""},{"path":"https://meghansaha.github.io/artpack/reference/circle_packer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Generation for Circle Packing — circle_packer","text":"","code":"library(ggplot2) packed_circles <- circle_packer(n = 50, big_r = 5, med_r = 3, small_r = 1, min_x = 0, max_x = 100, min_y = 0, max_y = 100) #> Big Circles Complete! #> Med Circles Complete! #> Small Circles Complete! packed_circles #> # A tibble: 6,600 × 3 #> # Groups:   group [66] #>        x     y group #>    <dbl> <dbl> <chr> #>  1  64    13   big_1 #>  2  64.0  13.3 big_1 #>  3  64.0  13.6 big_1 #>  4  63.9  13.9 big_1 #>  5  63.8  14.3 big_1 #>  6  63.8  14.6 big_1 #>  7  63.6  14.9 big_1 #>  8  63.5  15.1 big_1 #>  9  63.4  15.4 big_1 #> 10  63.2  15.7 big_1 #> # ℹ 6,590 more rows  packed_circles |> ggplot(aes(x,y, group = group))+ theme_void()+ theme(plot.background = element_rect(fill = \"black\"))+ geom_polygon(fill = \"white\", color = \"red\")+ coord_equal()"},{"path":"https://meghansaha.github.io/artpack/reference/grid_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data for A Custom-built Square Grid — grid_maker","title":"Create Data for A Custom-built Square Grid — grid_maker","text":"Creates dataframe x y points visualize square grid based given x y limits. Providing color palette fill style optional.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/grid_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data for A Custom-built Square Grid — grid_maker","text":"","code":"grid_maker(xlim, ylim, size, pal = NULL, fill_style = \"range\")"},{"path":"https://meghansaha.github.io/artpack/reference/grid_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data for A Custom-built Square Grid — grid_maker","text":"xlim numeric vector two X limits. minimum maximum limit X axis. ylim numeric vector two Y limits. minimum maximum limit Y axis. size numeric input. size grid. many shapes appear single row column. pal Optional. character vector color codes applied grid. fill_style Optional. character input. \"range\" \"random\". Determines color palette mapped.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/grid_maker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Data for A Custom-built Square Grid — grid_maker","text":"tibble","code":""},{"path":"https://meghansaha.github.io/artpack/reference/grid_maker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Data for A Custom-built Square Grid — grid_maker","text":"","code":"library(ggplot2) grid_data <- grid_maker(xlim = c(0,1),                        ylim = c(0,1),                        size = 2,                        pal = c(\"red\", \"black\", \"purple\"))  ggplot()+   geom_polygon(data = grid_data,                         aes(x,y, group = group),                         fill = grid_data$fill)+   coord_equal()"},{"path":"https://meghansaha.github.io/artpack/reference/rotator.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Points in a Data Frame Based on an Anchor Point — rotator","title":"Rotate Points in a Data Frame Based on an Anchor Point — rotator","text":"Rotates x y points given data frame given angle based designated anchor point.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/rotator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Points in a Data Frame Based on an Anchor Point — rotator","text":"","code":"rotator(data = NULL, angle = 5, anchor = \"center\")"},{"path":"https://meghansaha.github.io/artpack/reference/rotator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Points in a Data Frame Based on an Anchor Point — rotator","text":"data data frame tibble least x y variables angle angle (degrees) points data rotated around anchor anchor anchor point rotation. Default \"center\"","code":""},{"path":"https://meghansaha.github.io/artpack/reference/rotator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Points in a Data Frame Based on an Anchor Point — rotator","text":"#data frame","code":""},{"path":"https://meghansaha.github.io/artpack/reference/rotator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotate Points in a Data Frame Based on an Anchor Point — rotator","text":"","code":"library(ggplot2) original_square <- data.frame(x = c(0,3,3,0,0),                               y = c(0,0,3,3,0)) rotated_square <- rotator(data = original_square,                           angle = 45,                           anchor = \"center\")  ggplot()+   geom_path(data = original_square,                      aes(x,y),                      color = \"red\")+   geom_polygon(data = rotated_square,                         aes(x,y),                         fill = \"purple\")+   coord_equal()"},{"path":"https://meghansaha.github.io/artpack/reference/square_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Generation for Squares — square_data","title":"Data Generation for Squares — square_data","text":"tool creating data frame values create square specified size plotted.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/square_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Generation for Squares — square_data","text":"","code":"square_data(x, y, size, group_var = FALSE)"},{"path":"https://meghansaha.github.io/artpack/reference/square_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Generation for Squares — square_data","text":"x Numeric - bottom left x value square. y Numeric - bottom left y value square. size Numeric - size square. Must value greater zero. group_var TRUE/FALSE. Default FALSE. TRUE, adds grouping variable data frame. Default switched TRUE one x, y, size values present.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/square_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Generation for Squares — square_data","text":"Tibble","code":""},{"path":"https://meghansaha.github.io/artpack/reference/square_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Generation for Squares — square_data","text":"","code":"library(ggplot2) one_square <- square_data(x = 0, y = 0, size = 5)  one_square |> ggplot(aes(x,y))+ geom_path(color = \"green\")+ coord_equal()   x_vals <- c(0,4) y_vals <- c(0,0) sizes <- c(1,3) sq_cols <- c(\"purple\", \"yellow\")  two_squares <- square_data(x = x_vals, y = y_vals, size = sizes)  two_squares |> ggplot(aes(x,y, group = group, fill = group))+ scale_fill_manual(values = sq_cols)+ theme(legend.position = \"none\")+ geom_polygon()+ coord_equal()"},{"path":"https://meghansaha.github.io/artpack/reference/square_packer.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Generation for Square Packing — square_packer","title":"Data Generation for Square Packing — square_packer","text":"tool creating data frame values create square packing design plotted.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/square_packer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Generation for Square Packing — square_packer","text":"","code":"square_packer(   n,   min_x = 0,   max_x = 100,   min_y = 0,   max_y = 100,   big_r = 5,   med_r = 2,   small_r = 1,   color_pal = NULL,   color_type = \"regular\",   angles = FALSE )"},{"path":"https://meghansaha.github.io/artpack/reference/square_packer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Generation for Square Packing — square_packer","text":"n total number squares like function attempt create. single numeric value. min_x minimum limit x-axis - left 'border' canvas single numeric value. max_x maximum limit x-axis - right 'border' canvas single numeric value. min_y minimum limit y-axis - bottom 'border' canvas single numeric value. max_y maximum limit y-axis - top 'border' canvas single numeric value. big_r radius used 'big' sized squares single numeric value. med_r radius used 'medium' sized squares. single numeric value. small_r radius used 'small' sized squares. single numeric value. color_pal vector hex color codes mapped data. color_type Default \"regular\" - colors mapped order big squares small squares. \"reverse\" - colors mapped reversed order small big squares. \"random\" - colors mapped randomly sized square. angles Default FALSE. TRUE turns rotations squares.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/square_packer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Generation for Square Packing — square_packer","text":"Tibble","code":""},{"path":"https://meghansaha.github.io/artpack/reference/square_packer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Generation for Square Packing — square_packer","text":"","code":"library(ggplot2) packed_squares <- square_packer(500,                                 color_pal = art_pals(\"sunnyside\",5),                                 color_type = \"random\") #> Big Squares Complete! #> Med squares Complete! #> Small squares Complete!  packed_squares |>   ggplot(aes(x,y, group = group))+   theme_void()+   theme(plot.background = element_rect(fill = \"#000000\"))+   geom_polygon(fill = packed_squares$fill,                color = \"#000000\",                linewidth = 1)+   coord_equal()"},{"path":"https://meghansaha.github.io/artpack/reference/wave_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Generation for 2D Sine and Cosine Waves — wave_data","title":"Data Generation for 2D Sine and Cosine Waves — wave_data","text":"tool making data frames filled data displays sine cosine waves graphed. geom_path geom_polygon geoms recommended data use ggplot2 generative art.","code":""},{"path":"https://meghansaha.github.io/artpack/reference/wave_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Generation for 2D Sine and Cosine Waves — wave_data","text":"","code":"wave_data(   start,   end,   size = 1,   type = \"sin\",   rotate = NULL,   orientation = \"horiz\",   freq = 3,   n_points = 1000,   color = NULL,   fill = NULL,   group = FALSE,   dampen = NULL,   amplify = NULL )"},{"path":"https://meghansaha.github.io/artpack/reference/wave_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Generation for 2D Sine and Cosine Waves — wave_data","text":"start Numeric value. starting point wave coordinate system. end Numeric value. ending point wave coordinate system. size Numeric value. height width wave. Orientation set horizontal default, thus size affect height default. orientation set vertical, size controls width wave. type String value. \"sin\" \"cos\" sine cosine waves. sin default. rotate Optional. rotation desired, accepts numerical value -360 360 rotate wave input degrees. orientation String value. Default horizontal draw wave left right coordinate system. vertical draw wave bottom top coordinate system. freq Numeric value. Default 3 cycles per second. affects many \"peaks\" created wave. Must positive numeric value. n_points Numeric value. Default 1000. determines many points half wave . option can come handy using jitter options texture/illusion methods. color Optional. hex color code, R color string border color wave. fill Optional. hex color code, R color string fill color wave. group Logic value. TRUE FALSE. Default FALSE. TRUE, Adds group variable data frame. Useful iterative work make multiple waves single data frame. dampen Optional. factor dampen wave (make \"flatter\"). amplify Optional. factor amplify wave (make \"sharper\").","code":""},{"path":"https://meghansaha.github.io/artpack/reference/wave_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Generation for 2D Sine and Cosine Waves — wave_data","text":"Tibble","code":""},{"path":"https://meghansaha.github.io/artpack/reference/wave_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Generation for 2D Sine and Cosine Waves — wave_data","text":"","code":"library(ggplot2) wave_df <- wave_data(start = 0, end = 10,                   fill = \"purple\",                   color = \"green\")  wave_df |> ggplot(aes(x,y))+ theme_void()+ geom_polygon(fill = wave_df$fill,             color = wave_df$color,             linewidth = 3)+ coord_equal()"}]
